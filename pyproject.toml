[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv.workspace]
members = ["agent-memory-client"]

[tool.uv.sources]
agent-memory-client = { workspace = true }

[project]
name = "agent-memory-server"
dynamic = ["version"]
description = "A Memory Server for LLM Agents and Applications"
readme = "README.md"
requires-python = ">=3.12,<3.13"
license = { text = "Apache-2.0" }
authors = [{ name = "Andrew Brookins", email = "andrew.brookins@redis.com" }]
dependencies = [
    "accelerate>=1.6.0",
    "agent-memory-client",
    "anthropic>=0.15.0",
    "fastapi>=0.115.11",
    "langchain-core>=0.3.0",
    "mcp>=1.6.0",
    "numba>=0.60.0",
    "numpy>=2.1.0",
    "openai>=1.3.7",
    "pydantic>=2.5.2",
    "pydantic-settings>=2.8.1",
    "python-dotenv>=1.0.0",
    "pydocket>=0.6.3",
    "redisvl>=0.6.0",
    "sentence-transformers>=3.4.1",
    "structlog>=25.2.0",
    "tiktoken>=0.5.1",
    "transformers>=4.51.1",
    "uvicorn>=0.24.0",
    "sniffio>=1.3.1",
    "click>=8.1.0",
    "python-jose[cryptography]>=3.3.0",
    "httpx>=0.25.0",
    "PyYAML>=6.0",
    "cryptography>=3.4.8",
    "langchain-openai>=0.3.18",
    "langchain-redis>=0.2.1",
    "python-ulid>=3.0.0",
    "bcrypt>=4.0.0",
    "langchain-community>=0.3.27",
]

[project.scripts]
agent-memory = "agent_memory_server.cli:cli"

[project.urls]
Homepage = "https://github.com/redis-developer/agent-memory-server"
Repository = "https://github.com/redis-developer/agent-memory-server"
Documentation = "https://github.com/redis-developer/agent-memory-server/tree/main/docs"
Issues = "https://github.com/redis-developer/agent-memory-server/issues"

[tool.hatch.version]
path = "agent_memory_server/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["agent_memory_server"]

[tool.hatch.build.targets.sdist]
include = ["/agent_memory_server"]

[tool.hatch.metadata]
allow-direct-references = true

[tool.pytest.ini_options]
addopts = "-v"
testpaths = ["tests"]
python_files = ["test_*.py"]
asyncio_mode = "auto"

[tool.ruff]
# Exclude a variety of commonly ignored directories
exclude = [
    ".git",
    ".github",
    ".pytest_cache",
    "__pycache__",
    "env",
    "venv",
    ".venv",
    "*.egg-info",
]

line-length = 88

# Assume Python 3.12
target-version = "py312"

[tool.ruff.lint]
# Enable various rules
select = ["E", "F", "B", "I", "N", "UP", "C4", "RET", "SIM", "TID"]
# Exclude COM812 which conflicts with the formatter
ignore = ["COM812", "E501", "B008"]

# Allow unused variables when underscore-prefixed
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Fix code when possible
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.mccabe]
# Flag functions with high cyclomatic complexity
max-complexity = 10

[tool.ruff.lint.isort]
# Group imports by type and organize them alphabetically
known-first-party = ["redis-memory-server"]
section-order = [
    "future",
    "standard-library",
    "third-party",
    "first-party",
    "local-folder",
]
combine-as-imports = true
lines-after-imports = 2

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.format]
# Use double quotes for strings
quote-style = "double"
# Use spaces for indentation
indent-style = "space"

[project.optional-dependencies]
dev = [
    "agent-memory-client",
    "bertopic>=0.16.4,<0.17.0",
]

[dependency-groups]
bertopic = [
    "bertopic<0.17.0,>=0.16.4",
]
dev = [
    "pytest>=8.3.5",
    "pytest-asyncio>=0.23.0",
    "pytest-xdist>=3.5.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.3.0",
    "testcontainers>=3.7.0",
    "pre-commit>=3.6.0",
    "freezegun>=1.2.0",
    "mypy>=1.16.1",
    "ipdb>=0.13.13",
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
